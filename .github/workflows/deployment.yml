name: preinstall
on:
  push:
    branches: ['master']
jobs:
  preinstall:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache project deps
        id: cache-project-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-project-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: install project deps
        if: steps.cache-project-deps.outputs.cache-hit != 'true'
        run: npm run setup
      - name: build project
        run: npm run build
  build:
    runs-on: ubuntu-latest
    needs: preinstall
    env:
      USER: ${{ secrets.USER }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
      REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      UPLOADS_DIR: ${{ secrets.UPLOADS_DIR }}
      REGISTRY: wiseadme
      IMAGE_NAME: ecommerce
    steps:
      - uses: actions/checkout@v3
      - name: cache project deps
        id: cache-project-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-project-deps
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: install project deps
        if: steps.cache-project-deps.outputs.cache-hit != 'true'
        run: npm run setup
      - name: build projects
        run: npm run build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: ./packages/server
          file: ./packages/server/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:server

      - name: Build and push admin
        uses: docker/build-push-action@v5
        with:
          context: ./packages/admin
          file: ./packages/admin/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:admin
