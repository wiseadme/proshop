version: '3'
services:
  server:
    build: ./packages/server
    container_name: server
    command: npm run start
    restart: unless-stopped
    environment:
      - PORT=5001
      - USER=wiseadme
      - MONGO_URI=mongodb://mongo1,mongo2,mongo3:27017/commerce
      - ACCESS_TOKEN_SECRET_KEY=menesilazerbaijanliyam
      - REFRESH_TOKEN_SECRET_KEY=esilsozmenasibudur
      - REDIS_URL=redis://redis_cache:6379
    volumes:
      - uploads:/home/wiseadme/www/uploads/
    depends_on:
      - mongo-setup
      - redis_cache
    networks:
      - ecommerce
      - mongoNet

  redis_cache:
    image: redis:alpine
    container_name: redis
    ports: [ "127.0.0.1:6379:6379" ]
    networks:
      - ecommerce

  mongo1:
    image: mongo:5.0.14
    container_name: mongo1
    volumes:
      - mongo_primary:/data/db
    networks:
      - mongoNet
    command: mongod --replSet my-mongo-set

  mongo2:
    image: mongo:5.0.14
    container_name: mongo2
    volumes:
      - mongo_secondary:/data/db
    networks:
      - mongoNet
    depends_on:
      - mongo1
    command: mongod --replSet my-mongo-set

  mongo3:
    image: mongo:5.0.14
    container_name: mongo3
    volumes:
      - mongo_seed:/data/db
    networks:
      - mongoNet
    depends_on:
      - mongo1
      - mongo2
    command: mongod --replSet my-mongo-set

  mongo-setup:
    image: mongo:5.0.14
    restart: "no"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./scripts/mongosetup.sh:/scripts/mongosetup.sh
    entrypoint: [ "bash", "/scripts/mongosetup.sh" ]
    networks:
      - mongoNet

  admin:
    build: ./packages/admin
    container_name: admin
    command: nginx -g "daemon off;"
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - ecommerce

  shop:
    image: wiseadme/ecommerce:shop
    container_name: shop-app
    restart: unless-stopped
    command: npm run preview
    depends_on:
      - server
    networks:
      - ecommerce

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    command: nginx -g "daemon off;"
    ports:
      - "80:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - uploads:/var/lib/docker/volumes/ecommerceplatform_uploads/_data
    depends_on:
      - admin
    networks:
      - ecommerce

volumes:
  ecommerce:
  uploads:
  mongo_primary:
  mongo_secondary:
  mongo_seed:

networks:
  mongoNet:
    driver: bridge
  ecommerce:
    driver: bridge
